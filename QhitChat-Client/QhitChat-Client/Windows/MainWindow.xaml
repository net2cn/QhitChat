<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QhitChat_Client.Windows"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Controls="clr-namespace:QhitChat_Client.Windows.Controls" x:Class="QhitChat_Client.Windows.MainWindow"
        mc:Ignorable="d"
        Title="QhitChat" Height="820" Width="1220" ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" MinWidth="1200" MinHeight="800" SourceInitialized="Window_SourceInitialized" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}">
    <Window.Resources>
        <Style x:Key="Flat">
            <Setter Property="FrameworkElement.MaxWidth" Value="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}"/>
            <Setter Property="FrameworkElement.MaxHeight" Value="{x:Static SystemParameters.MaximizedPrimaryScreenHeight}"/>
            <Setter Property="Control.Background" Value="{x:Null}" />
            <Setter Property="Control.BorderBrush" Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="{x:Null}" />
                    <Setter Property="Control.BorderBrush" Value="{x:Null}" />
                    <Setter Property="Control.FontWeight" Value="Bold" />
                </Trigger>
                <Trigger Property="UIElement.IsFocused" Value="True">
                    <Setter Property="Control.FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Border>
        <Border.Effect>
            <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.8" 
                Color="Gray"/>
        </Border.Effect>
        <Grid Background="#FF2C2C2C" Margin="10">
            <Controls:TitleBar x:Name="TitleBar" VerticalAlignment="Top"/>
            <materialDesign:DialogHost
            Identifier="RootDialog"
            DialogTheme="Inherit"
            SnackbarMessageQueue="{Binding MessageQueue, ElementName=MainSnackbar}"
            Margin="0,30,0,0">
                <materialDesign:DrawerHost
                IsLeftDrawerOpen="{Binding IsChecked, ElementName=MenuToggleButton}">
                    <materialDesign:DrawerHost.LeftDrawerContent>
                        <DockPanel MinWidth="400">
                            <ToggleButton 
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                        DockPanel.Dock="Top"
                        HorizontalAlignment="Right" 
                        Margin="16"
                        IsChecked="{Binding IsChecked, ElementName=MenuToggleButton, Mode=TwoWay}"/>
                            <TextBox 
                        x:Name="DemoItemsSearchBox"
                        Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}"
                        DockPanel.Dock="Top"
                        Margin="16, 4"
                        Width="325"
                        materialDesign:HintAssist.Hint="Search"
                        materialDesign:HintAssist.IsFloating="True"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                        materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                        materialDesign:TextFieldAssist.TextFieldCornerRadius="4"/>
                            <ListBox 
                        x:Name="DemoItemsListBox" 
                        Margin="0 16 0 16"
                        SelectedIndex="{Binding SelectedIndex}"
                        SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding DemoItems}"
                        AutomationProperties.Name="DemoPagesListBox"
                        >
                                <ListBox.Resources>
                                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                                </ListBox.Resources>
                                <ListBox.Style>
                                    <StaticResource ResourceKey="MaterialDesignNavigationPrimaryListBox"/>
                                </ListBox.Style>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="domain:DemoItem">
                                        <TextBlock Text="{Binding Name}" Margin="24 4 0 4" AutomationProperties.AutomationId="DemoItemPage"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </materialDesign:DrawerHost.LeftDrawerContent>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="299*" MinWidth="299"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="500*" MinWidth="500"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel>
                            <materialDesign:ColorZone
                            Padding="16"
                            materialDesign:ShadowAssist.ShadowDepth="Depth2"
                            DockPanel.Dock="Top" Mode="PrimaryMid">
                                <DockPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <ToggleButton
                                        x:Name="MenuToggleButton"
                                        Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                        IsChecked="False"
                                        AutomationProperties.Name="HamburgerToggleButton" Click="MenuToggleButton_Click"/>
                                    </StackPanel>
                                    <TextBlock
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontSize="22"
                                    Margin="10,0,0,0"
                                    Text="Contacts"/>
                                    <materialDesign:PopupBox StaysOpen="False" PlacementMode="BottomAndAlignRightEdges" HorizontalAlignment="Right"  Margin="0,0,0,0">
                                        <StackPanel>
                                            <Grid Margin="10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <TextBlock
                                        Text="Light"
                                        Margin="0 0 10 0"/>
                                                <ToggleButton
                                        x:Name="DarkModeToggleButton"
                                        Grid.Column="1"/>
                                                <TextBlock
                                        Text="Dark"
                                        Margin="10 0 0 0"
                                        Grid.Column="2"/>
                                            </Grid>
                                            <Separator/>
                                            <Button
                                    Content="Hello World"/>
                                            <Separator/>
                                            <Button
                                    Content="Exit"/>
                                        </StackPanel>
                                    </materialDesign:PopupBox>
                                </DockPanel>
                            </materialDesign:ColorZone>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ScrollViewer
                        x:Name="MainScrollViewer"
                        Grid.Row="1"
                        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                        HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}"
                        VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}" >
                                    <ContentControl
                            DataContext="{Binding SelectedItem}"
                            Margin="{Binding MarginRequirement, FallbackValue=16}"
                            Content="{Binding Content, FallbackValue={x:Null}, UpdateSourceTrigger=PropertyChanged}"/>
                                </ScrollViewer>
                                <materialDesign:Snackbar
                        x:Name="MainSnackbar"
                        MessageQueue="{materialDesign:MessageQueue}"
                        Grid.Row="1"/>
                            </Grid>
                        </DockPanel>
                        <GridSplitter Width="5" HorizontalAlignment="Stretch" Grid.Column="1" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        <Grid Grid.Column="2">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="800,600" StartPoint="0,0" SpreadMethod="Reflect" MappingMode="Absolute">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform X="0"/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#FFE6B6D9" Offset="1"/>
                                    <GradientStop Color="#FFDFAFE8" Offset="0"/>
                                    <GradientStop Color="#FF8778C3" Offset="0.382"/>
                                    <GradientStop Color="#FF8778C3" Offset="0.618"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <Rectangle Fill="Beige">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="{Binding Converter={svgc:SvgImageConverter AppName=QhitChat-Client}, ConverterParameter=/Resources/pattern-12.svg}" TileMode="Tile" Viewport="0,0,375,812" ViewportUnits="Absolute"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ScrollViewer
                                x:Name="ChatScrollViewer"
                                Grid.Row="1"
                                materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                                HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}"
                                VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}" >
                                    <ContentControl
                                    DataContext="{Binding SelectedItem}"
                                    Margin="{Binding MarginRequirement, FallbackValue=16}"
                                    Content="{Binding Content, FallbackValue={x:Null}, UpdateSourceTrigger=PropertyChanged}"/>
                                </ScrollViewer>
                                <materialDesign:Snackbar
                                x:Name="ChatSnackbar"
                                MessageQueue="{materialDesign:MessageQueue}"
                                Grid.Row="1"/>
                            </Grid>
                            <!--<Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="#DDFFFFFF" FontSize="50">从左侧选择对象开始聊天</Label>-->
                            <!--<svgc:SvgViewbox Source="/Resources/pattern-29.svg" Stretch="Uniform"/>-->
                        </Grid>
                    </Grid>
                </materialDesign:DrawerHost>
            </materialDesign:DialogHost>
        </Grid>
    </Border>
</Window>
